import {CGFobject} from '../lib/CGF.js';
/**
 * MyUnitCube
 * @constructor
 * @param scene - Reference to MyScene object
 */
export class MyUnitCube extends CGFobject {
	constructor(scene) {
		super(scene);
		this.initBuffers();
	}
	
	initBuffers() {
		this.vertices = [
			0.5, 0.5, 0.5,      //0 0
			0.5, 0.5, 0.5,      //0 1
			0.5, 0.5, 0.5,      //0 2

			0.5, 0.5, -0.5,	    //1 3
			0.5, 0.5, -0.5,	    //1 4
			0.5, 0.5, -0.5,	    //1 5

			-0.5, 0.5, -0.5,	//2 6
			-0.5, 0.5, -0.5,	//2 7
			-0.5, 0.5, -0.5,	//2 8

			-0.5, 0.5, 0.5,     //3 9
			-0.5, 0.5, 0.5,     //3 10
			-0.5, 0.5, 0.5,     //3 11

			0.5, -0.5, 0.5,     //4 12
			0.5, -0.5, 0.5,     //4 13
			0.5, -0.5, 0.5,     //4 14

			0.5, -0.5, -0.5,	//5 15
			0.5, -0.5, -0.5,	//5 16
			0.5, -0.5, -0.5,	//5 17

			-0.5, -0.5, -0.5,	//6 18
			-0.5, -0.5, -0.5,	//6 19
			-0.5, -0.5, -0.5,	//6 20

			-0.5, -0.5, 0.5,    //7 21
			-0.5, -0.5, 0.5,    //7 22
			-0.5, -0.5, 0.5,    //7 23
		];

		//Counter-clockwise reference of vertices
		this.indices = [
			0, 3, 6,
            6, 9, 0,
            18, 15, 12,
            12, 21, 18,
            9, 6, 18,
            18, 21, 9,
            15, 3, 0,
            0, 12, 15,
            12, 0, 9,
            9, 21, 12,
            6, 3, 15,
            15, 18, 6,

			1, 4, 7,
            7, 10, 1,
            19, 16, 13,
            13, 22, 19,
            10, 7, 19,
            19, 22, 10,
            16, 4, 1,
            1, 13, 16,
            13, 1, 10,
            10, 22, 13,
            7, 4, 16,
            16, 19, 7,

			2, 5, 8,
            8, 11, 2,
            20, 17, 14,
            14, 23, 20,
            11, 8, 20,
            20, 23, 11,
            17, 5, 2,
            2, 14, 17,
            14, 2, 11,
            11, 23, 14,
            8, 5, 17,
            17, 20, 8,
		];

		this.normals = [
			// 0
			0, 1, 0,
			1, 0, 0,
			0, 0, 1,
			// 1
			0, 1, 0,
			1, 0, 0,
			0, 0, -1,
			// 2
			0, 1, 0,
			-1, 0, 0,
			0, 0, -1,
			// 3
			0, 1, 0,
			-1, 0, 0,
			0, 0, 1,
			// 4
			0, -1, 0,
			1, 0, 0,
			0, 0, 1,
			// 5
			0, -1, 0,
			1, 0, 0,
			0, 0, -1,
			// 6
			0, -1, 0,
			-1, 0, 0,
			0, 0, -1,
			// 7
			0, -1, 0,
			-1, 0, 0,
			0, 0, 1,
		];

		//The defined indices (and corresponding vertices)
		//will be read in groups of three to draw triangles
		this.primitiveType = this.scene.gl.TRIANGLES;

		this.initGLBuffers();
	}
}
